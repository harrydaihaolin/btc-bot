name: Periodic Court Monitoring

on:
  schedule:
    # Run every 2 hours during business hours (9 AM - 9 PM PST)
    - cron: '0 9,11,13,15,17,19,21 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  monitor-courts:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Compose
      run: |
        # Create environment file with secrets
        cp env.example .env.monitoring
    
    - name: Configure BTC credentials
      run: |
        echo "BTC_USERNAME=${{ secrets.BTC_USERNAME }}" >> .env.monitoring
        echo "BTC_PASSWORD=${{ secrets.BTC_PASSWORD }}" >> .env.monitoring
        echo "BTC_NOTIFICATION_EMAIL=${{ secrets.BTC_NOTIFICATION_EMAIL }}" >> .env.monitoring
        echo "BTC_GMAIL_APP_PASSWORD=${{ secrets.BTC_GMAIL_APP_PASSWORD }}" >> .env.monitoring
        echo "BTC_SMS_PHONE=${{ secrets.BTC_SMS_PHONE }}" >> .env.monitoring
    
    - name: Configure UBC credentials
      run: |
        echo "UBC_USERNAME=${{ secrets.UBC_USERNAME }}" >> .env.monitoring
        echo "UBC_PASSWORD=${{ secrets.UBC_PASSWORD }}" >> .env.monitoring
        echo "UBC_NOTIFICATION_EMAIL=${{ secrets.UBC_NOTIFICATION_EMAIL }}" >> .env.monitoring
        echo "UBC_GMAIL_APP_PASSWORD=${{ secrets.UBC_GMAIL_APP_PASSWORD }}" >> .env.monitoring
        echo "UBC_SMS_PHONE=${{ secrets.UBC_SMS_PHONE }}" >> .env.monitoring
    
    - name: Configure Twilio credentials
      run: |
        echo "TWILIO_SID=${{ secrets.TWILIO_SID }}" >> .env.monitoring
        echo "TWILIO_TOKEN=${{ secrets.TWILIO_TOKEN }}" >> .env.monitoring
        echo "TWILIO_PHONE=${{ secrets.TWILIO_PHONE }}" >> .env.monitoring
    
    - name: Run court monitoring
      run: |
        # Build and start monitoring
        docker-compose --env-file .env.monitoring build
        docker-compose --env-file .env.monitoring up -d
        
        # Wait for initial scan
        sleep 60
        
        # Check logs for any court findings
        docker-compose --env-file .env.monitoring logs --tail=50
        
        # Stop services
        docker-compose --env-file .env.monitoring down
    
    - name: Upload monitoring logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: monitoring-logs-${{ github.run_number }}
        path: logs/
        retention-days: 7

  health-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Test bot health
      run: |
        # Test BTC bot health
        docker build -f Dockerfile.btc -t btc-test .
        docker run --rm btc-test python3 -c "
        from btc.config.btc_config import BTCConfig
        from btc.monitor.btc_monitor import BTCMonitor
        config = BTCConfig()
        monitor = BTCMonitor(config)
        print('BTC bot health check: OK')
        "
        
        # Test UBC bot health
        docker build -f Dockerfile.ubc -t ubc-test .
        docker run --rm ubc-test python3 -c "
        from ubc.config.ubc_config import UBCConfig
        from ubc.monitor.ubc_monitor import UBCMonitor
        config = UBCConfig()
        monitor = UBCMonitor(config)
        print('UBC bot health check: OK')
        "
