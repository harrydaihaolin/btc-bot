name: Periodic Court Monitoring

on:
  schedule:
    # Run every hour during business hours (9 AM - 9 PM PST)
    - cron: "0 9-21 * * *"
  workflow_dispatch: # Allow manual triggering

jobs:
  monitor-btc-courts:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Configure BTC credentials
        run: |
          echo "BTC_USERNAME=${{ secrets.BTC_USERNAME }}" >> $GITHUB_ENV
          echo "BTC_PASSWORD=${{ secrets.BTC_PASSWORD }}" >> $GITHUB_ENV
          echo "BTC_NOTIFICATION_EMAIL=${{ secrets.BTC_NOTIFICATION_EMAIL }}" >> $GITHUB_ENV
          echo "BTC_GMAIL_APP_PASSWORD=${{ secrets.BTC_GMAIL_APP_PASSWORD }}" >> $GITHUB_ENV
          echo "BTC_RECIPIENT_EMAILS=${{ secrets.BTC_RECIPIENT_EMAILS }}" >> $GITHUB_ENV
          echo "BTC_MONITORING_INTERVAL=1" >> $GITHUB_ENV

      - name: Run BTC court monitoring
        run: |
          # Run single scan to test functionality
          python3 -c "
          from btc_bot import BTCTennisBot
          bot = BTCTennisBot()
          print('üîç Running BTC court scan...')
          bot.run_single_scan()
          print('‚úÖ BTC scan completed!')
          "

      - name: Upload BTC monitoring logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: btc-monitoring-logs-${{ github.run_number }}
          path: logs/
          retention-days: 7

  monitor-ubc-courts:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Configure UBC credentials
        run: |
          echo "UBC_USERNAME=${{ secrets.UBC_USERNAME }}" >> $GITHUB_ENV
          echo "UBC_PASSWORD=${{ secrets.UBC_PASSWORD }}" >> $GITHUB_ENV
          echo "UBC_NOTIFICATION_EMAIL=${{ secrets.UBC_NOTIFICATION_EMAIL }}" >> $GITHUB_ENV
          echo "UBC_GMAIL_APP_PASSWORD=${{ secrets.UBC_GMAIL_APP_PASSWORD }}" >> $GITHUB_ENV
          echo "UBC_RECIPIENT_EMAILS=${{ secrets.UBC_RECIPIENT_EMAILS }}" >> $GITHUB_ENV
          echo "UBC_MONITORING_INTERVAL=1" >> $GITHUB_ENV

      - name: Run UBC court monitoring
        run: |
          # Run single scan to test functionality
          python3 -c "
          from ubc_bot import UBCTennisBot
          bot = UBCTennisBot()
          print('üîç Running UBC court scan...')
          bot.run_single_scan()
          print('‚úÖ UBC scan completed!')
          "

      - name: Upload UBC monitoring logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ubc-monitoring-logs-${{ github.run_number }}
          path: logs/
          retention-days: 7

  health-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run health check
        run: |
          python3 -c "
          from btc.config.btc_config import BTCConfig
          from btc.monitor.btc_monitor import BTCMonitor
          from ubc.config.ubc_config import UBCConfig
          from ubc.monitor.ubc_monitor import UBCMonitor
          print('‚úÖ Health check passed - all modules import successfully')
          "
